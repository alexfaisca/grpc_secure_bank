syntax = "proto3";
package pt.ulisboa.ist.sirs.contract.namingserver;

import "Enums.proto";

message Ack {}

message InitiateEncryptedKeyExchangeResponse {
  bytes serverCert = 1;
}

message EncryptedKeyExchangeRequest {
  bytes clientCert = 1;
  bytes clientOps = 2;
  bytes clientParams = 3;
}

message EncryptedKeyExchangeResponse {
  bytes serverParams = 1;
  bytes serverChallenge = 2;
}

message EncryptedKeyExchangeChallengeRequest {
  int64 serverChallenge = 1;
  int64 clientChallenge = 2;
}

message EncryptedKeyExchangeChallengeResponse {
  int64 clientChallenge = 1;
}

message RegisterRequest {
  enums.Services service = 1;
  string address = 2;
  int32 port = 3;
  string qualifier = 4;
}

message LookupRequest {
  enums.Services service = 1;
}

message LookupResponse {
  message ServerEntryResponse {
    string address = 1;
    int32 port = 2;
    string qualifier = 3;
  }
  repeated ServerEntryResponse servers = 1;
}

message DeleteRequest {
  enums.Services service = 1;
  string qualifier = 2;
}

service NamingServerService {
  rpc initiateEncryptedKeyExchange(Ack) returns (InitiateEncryptedKeyExchangeResponse);
  rpc encryptedKeyExchange(EncryptedKeyExchangeRequest) returns (EncryptedKeyExchangeResponse);
  rpc encryptedKeyExchangeChallenge(EncryptedKeyExchangeChallengeRequest) returns (EncryptedKeyExchangeChallengeResponse);
  rpc register(RegisterRequest) returns (Ack);
  rpc lookup(LookupRequest) returns (LookupResponse);
  rpc delete(DeleteRequest) returns (Ack);
}
